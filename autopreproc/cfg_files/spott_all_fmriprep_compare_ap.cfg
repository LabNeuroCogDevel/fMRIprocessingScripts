#!/bin/bash
use_job_array=0
use_moab=0 #test moab for job array handling
use_massive_qsub=1
njobs=200 #maximum number of concurrent jobs

protocol=SRLD
remote_host="hoth" #login string for ssh commands to remote server
remote_mrraw_root=/nfs/imaging-data/3Tusers/mnh5174/${protocol} #location of protocol directory on remote
remote_subid_regex="${remote_mrraw_root}/[[:digit:]]{3}" #regular expression denoting expected subject id form. Example here: 005
remote_folder_depth=1 #how many levels beneath remote_mrraw_root to look for subjects

loc_root=/gpfs/group/mnh5174/default/Michael/fmriprep_sandbox #local root directory for project
loc_mrraw_root=${loc_root}/mr_raw_ap #local dicom sync directory
loc_mrproc_root=${loc_root}/mr_proc_ap #local directory for processed data. NB: If not defined, processed data will be placed inside subject directories in loc_mrraw_root

sync_raw_data=0 #if set to 1, then syncMRCTR_Raw will execute rsync against remote.
postrsync_exec="renameSLEICSerDirs" #a command to execute in the subject's output directory (in <loc_mrraw_root> after syncMRCTR_MRRaw)

preprocessed_dirname="mni_nosmooth_nohp" #name of directory to be created that will contain preprocessed files

##Structural preprocessing arguments
mprage_dirpattern="*t1_mprage_sag_p2_iso" #expected wildcard name for structural scan directory
mprage_dicompattern="1.3.12*" #specify naming scheme of DICOM files in mprage directories
preprocessMprage_call="-delete_dicom yes -template_brain MNI_2mm -grad_unwarp prisma.coeff.grad -weak_bias"
proc_freesurfer=0 #if set to 1, then after preprocessMprage completes, FreeSurferPipeline will run
freesurfer_id_prefix="PANDAA_" #string to prepend to folder name to ensure uniqueness in SUBJECTS_DIR

#Functional  preprocessing arguments
paradigm_name="spott_pav,spott_ins,spott_pit" #used for setting up directory names for each functional run of paradigm
n_expected_funcruns=1 #how many functional runs are expected per subject. Used to skip out of completed subjects
functional_dirpattern="*spott_pav,*spott_ins,*spott_pit"
functional_dicompattern="1.3.12*"
detect_refimg=1 #detect SBRef for use as -func_refimg
proc_functional=1 #preprocess functional images

se_phasepos_dirpattern="*cmrr_mbep2d_se_1_PA"
se_phasepos_dicompattern="1.3.12*"
se_phaseneg_dirpattern="*cmrr_mbep2d_se_1_AP"
se_phaseneg_dicompattern="1.3.12*"

#preprocessFunctional call to be used (only the part that does not vary across subjects).
#Do not include any information here about -4d (the input), -mprage_bet or -warpcoef (varies by subject), or -fm_phase, -fm_magnitude, or fm_cfg.
#make sure this is a quoted string! Can use backslashes to separate call across lines (within quotes).
preproc_call="-no_hp -no_smooth -rescaling_method 10000_globalmedian -template_brain MNI_2.3mm \
-func_struc_dof bbr -warp_interpolation spline -constrain_to_template n \
-4d_slice_motion -custom_slice_times detect \
-motion_censor fd=0.9 -delete_dicom yes \
-nuisance_file nuisance_regressors.txt -nuisance_compute csf,dcsf,wm,dwm \
-epi_pedir -y -epi_echospacing .00053 -epi_te 30.2"

#need to export these environment variables to be accessible in R
export protocol remote_host remote_mrraw_root remote_subid_regex remote_folder_depth remote_mb_root \
       loc_root loc_mrraw_root loc_mrproc_root sync_raw_data postrsync_exec loc_mb_root mb_filepattern \
       mprage_dirpattern preprocessed_dirname paradigm_name n_expected_funcruns \
       functional_dirpattern functional_dicompattern detect_refimg \
       sync_mb_data preproc_call gre_fieldmap_dirpattern fieldmap_cfg mprage_dicompattern \
       proc_freesurfer freesurfer_id_prefix proc_functional preprocessMprage_call \
       se_phasepos_dirpattern se_phaseneg_dirpattern se_phasepos_dicompattern se_phaseneg_dicompattern \
       use_job_array use_moab use_massive_qsub njobs
