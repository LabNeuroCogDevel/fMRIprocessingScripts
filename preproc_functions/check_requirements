#!/bin/bash

function check_requirements {
    #preliminary checks for required files and settings

    #dcm2niix is preferred for SE TOPUP correction because Dimon seems to lose important header information that
    #results in the fieldmap behaving strangely between TOPUP, flirt -fieldmap, and fugue. This appears to be largely resolved
    #by using fslreorient2std on input images to achieve LPI/RPI before applying fieldmaps.
    command -v dcm2niix >/dev/null 2>&1 && have_dcm2niix=1 || have_dcm2niix=0

    #ANTS is quite good at coregistration (better than flirt in many cases) and will be increasingly preferred in the pipeline
    #c3d provides a tool for transforming an ANTS matrix (itk) to FSL-compatible.mat
    command -v antsRegistrationSyN.sh >/dev/null 2>&1 && have_ants=1 || have_ants=0
    command -v c3d_affine_tool >/dev/null 2>&1 && have_c3d=1 || have_c3d=0
    if [[ $have_ants -eq 1 && $have_c3d -eq 1 && $prefer_ants -eq 1 ]]; then
	rel "Using ANTS 6dof coregistration when possible: antsRegistrationSyN.sh" c
	use_ants=1
    else
	rel "Preferring flirt over ANTS when possible" c
	use_ants=0
    fi
    
    #use the saved slice order from dicom_to_nifti conversion
    if [ -f .detect_sliceorder ]; then
	if [ -n "$sliceAcquisition" ]; then
	    rel "Ignoring user setting for slice acquisition: ${sliceAcquisition} because of auto-detected order in .detect_sliceorder." c
	fi
	
	read sliceAcquisition < .detect_sliceorder
    fi

    if [ -f .detect_tr ]; then
	if [ -n "$tr" ]; then
	    rel "Ignoring user setting for -tr: ${tr} because of auto-detected TR in .detect_tr." c
	fi

	read tr < .detect_tr
    fi

    if [ -f .detect_te ]; then
	if [ -n "$epiTE" ]; then
	    rel "Ignoring user setting for -epi_te: ${epiTE} because of auto-detected TE in .detect_te." c
	fi

	read epiTE < .detect_te
    fi
  
    #use the saved series number and protocol name for epiref detection
    if [ -f .detect_series ]; then
	read series < .detect_series
    fi

    if [ -f .detect_protocolname ]; then
	read protocolname < .detect_protocolname
    fi

    #use detected epiref image to override directory, if specified
    if [ -f .detect_epiref ]; then
	read funcRefimg  < .detect_epiref
    fi
    
    
    #check that slice acquisition order and TR was specified or detected in case of 4d input
    if [ -n "$funcFile" ]; then
	if [[ -z $sliceAcquisition && $no_st -eq 0 && -z $sliceTimesFile ]]; then #only enforce provision of slice acquisition order if slice timing in pipeline.
	    echo -e "Slice acquisition order was not specified and not detected.\nPass using the -slice_acquisition parameter.\nExiting.\n"
	    exit 1
	fi

	if [ -z $tr ]; then
	    echo -e "TR was not specified and not detected.\nPass using the -tr parameter.\nExiting.\n"
	    exit 1
	fi

	#check number of slices
	#if DICOMs used, num slices will be picked up by preproc_functions/dicom_to_nifti
	detectSliceNum=$( fslhd ${funcFile}  | grep '^dim3' | perl -pe 's/dim3\s+(\d+)/\1/' )

    fi

    process_func_refimg #prepare -func_refimg file
    
    #if no warp and ICA-AROMA are both requested, we must compute the warp to MNI to have the script work properly
    if [[ $no_warp -eq 1 && $ica_aroma -eq 1 ]]; then
	compute_warp=1
    fi

    #if no smooth and ICA-AROMA are both requested, we need to compute AROMA on smoothed data (increases SNR) and then apply component regressions onto unsmoothed data.
    #Undo smooth will remove the 's' at the beginning of the file prefix and run fsl_regfilt on unsmoothed data
    if [[ $no_smooth -eq 1 && $ica_aroma -eq 1 ]]; then
  	undo_smooth=1
  	no_smooth=0
    else
  	undo_smooth=0
    fi

    #####
    #High-pass filtering for slow-frequency scanner drift
    #-bptf 60 -1: high-pass filter with FWHM = 60 volumes (e.g., so filter slower than about 141 volumes)
    #             -1 indicates don't low-pass filter
    #NB. The -bptf specification is in terms of sigma (width of Gaussian). As a result, this is the HWHM, not FWHM.
    #Details: https://www.jiscmail.ac.uk/cgi-bin/webadmin?A2=ind1109&L=fsl&D=0&P=202555
    #To achieve the desired cutoff, we need to compute the number of volumes as follows:
    #  sigma[vol] = cutoff[sec]/(2.355*TR[sec])
    # where 2.355 is the FWHM -> Sigma conversion

    #allow for seconds to be passed in, then converted to volumes
    if [ $no_hp -eq 0 ]; then
	if [ "${hpFilter: -1}" == "s" ]; then
	    rel "High pass filter specified in seconds: $hpFilter. Dividing by 2.355*${tr} (TR) for fslmaths -bptf" c
	    hpFilter=$( echo "scale=4; ${hpFilter%?}/(2.355*${tr})" | bc )
	else
	    rel "Dividing -hp_filter argument $hpFilter (in volumes) by 2.355 for FWHM argument to fslmaths -bptf." c	    
	    hpFilter=$( echo "scale=4; ${hpFilter}/2.355" | bc )
	fi
    fi
    
    #check for existence of required files
    #mprageBet and warpCoef only required if warping to a standard template (or just computing via -compute_warp_only).
    #Thus, don't require for pure -no_warp runs.
    if [[ $no_warp -eq 0 && $compute_warp -eq 0 ]]; then
	if [ -z $mprageBet ]; then
	    echo -e "Betted mprage file parameter not provided.\nPass using the -mprage_bet parameter.\nExiting.\n"
	    exit 1
	elif [[ ! -r $mprageBet ]]; then
          echo -e "Betted mprage file: '$mprageBet' does not exist. from '$(pwd)'. Consider absolute path.\nExiting.\n"
	    exit 1
	else
	    #make mprage into an absolute path and symlink within the current directory
	    cd "$(dirname $mprageBet)"
	    mprageBet="$(pwd)/$(basename $mprageBet)"
	    cd - 1>/dev/null
	    # do not link if mprage is in the directory already #WF for MJ 20150424
	    [ ! -r "./$(basename $mprageBet)" ] && \
	      ln -sfn "$mprageBet" "./$(basename $mprageBet)"
	fi

	
	if [ -z $warpCoef ]; then
	    echo -e "Structural to standard space warp coefficients file (from FNIRT) not provided.\nPass using the -warpcoef parameter.\nExiting.\n"
	    exit 1
	elif [[ ! -f $warpCoef ]] && [[ ! -h ${warpCoef} ]]; then
	    echo "Structural to standard space warp coefficients file does not exist.\nFile specified: $warpCoef.\nExiting.\n"
	    exit 1
	fi
    fi

    #explicit return code needed to avoid implicit status of prior command
    return 0

}
# vim: set tabstop=7:
