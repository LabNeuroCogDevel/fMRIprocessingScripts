#!/bin/bash

gm_mni="/opt/ni_tools/standard/mni_icbm152_nlin_asym_09c/mni_icbm152_gm_tal_nlin_asym_09c_2.3mm.nii"

usage() {
    echo "$@" 
    echo USAGE: $0 path/to/preprocessFunctional
    exit 1
}

TSNR_onerun(){

   pdir="$1" 
   [ ! -d "$pdir" ] && usage "directory $1 does not exist"
   [ ! -r "$pdir/.preprocessfunctional_complete" ] && usage "$(pwd) is not complete"
   cd $pdir
   pdir=$(pwd)


   firstfile=$(ls _*.nii.gz|grep -v T1w |sed 1q)
   [ -z "$firstfile" -o ! -r "$firstfile" ] && echo "cannot find first file in pipeline ($(pwd)/_*.nii.gz)" >&2 && return 1
   suffix=${firstfile:1:${#firstfile}}
   ntr=$(3dinfo -nt $firstfile)

    ##FIGURE OUT SOME NAMING CONVENTIONS##
    for file in $(3dinfo -iname -nt *_$suffix | grep $ntr\$); do
        [ ! -r $file ] && echo "UTOH! bad expected file $file" >&2 && continue
    	#header="${header}$conditions $conditions" #will this even be right? #producing text file...
    	fname=$(basename $file) #the file name of 'file'
    	prefix=${fname//.nii.gz/} #the file name of 'file' without the extension

        #echo "start with $fname"
    	outname=${fname//_${suffix}/}_tsnr.nii.gz
        #echo $outname
    	outfull=tsnr/$outname #the entire output name+directory

        [ ! -d tsnr ] && mkdir -p tsnr
    	
    	##DO WORK
    	##gray matter mask in standard space
        #gm_mni="/opt/ni_tools/standard/mni_icbm152_nlin_asym_09c/mni_icbm152_gm_tal_nlin_asym_09c_brain_2.3mm.nii"
   	
   	if [ ! -r tsnr/gm_mask_native.nii.gz ]; then
   		#gray matter mask in native space -need this once for each subject
   		#make the warp
   		invwarp -w func_to_standard_warp_allv.nii.gz -o standard_to_func_warp.nii.gz -r $firstfile
   		#apply the warp
   		applywarp --in="$gm_mni" \
   			--out=tsnr/gm_mask_native \
   			--warp=standard_to_func_warp.nii.gz \
   			--ref=${firstfile} \
   			--rel \
   			--interp=spline
   	fi
   	echo tsnr/$outname
        #check to see what space you are in
        space=$(3dinfo -space ${prefix}.nii.gz)
        if [ $space == "MNI" ]; then
        	gm_mask=$gm_mni
        else
        	gm_mask=$pdir/tsnr/gm_mask_native.nii.gz
        fi

        tsnrout=$pdir/tsnr/$outname 
        #echo "checking $tsnrout"
	if [ ! -r "$tsnrout" ] ; then
           # need to put mean back in for tsnr calc
	   if [ ${file:0:1} == "b" ]; then
	   	#remove drift, this artificially inflate your SD, make SD look bigger than what it is
	        [ ! -r $pdir/tsnr/$prefix.det.nii.gz ] && 3dDetrend -prefix $pdir/tsnr/$prefix.det.nii.gz -polort 4 $pdir/$prefix.nii.gz
	   	#calcualte SD on detrended data
	        [ ! -r $pdir/tsnr/$prefix.det.stdev.nii.gz ] && 3dTstat -stdev -prefix $pdir/tsnr/$prefix.det.stdev.nii.gz $pdir/tsnr/$prefix.det.nii.gz
	   	[ ! -r $pdir/tsnr/$outname ] && 3dcalc -a $pdir/tsnr/${prefix:2}.tmean.nii.gz -b $pdir/tsnr/$prefix.det.stdev.nii.gz -expr 'a/b' -float -prefix $pdir/tsnr/$outname
	   else

	   	 [ ! -r $pdir/tsnr/$prefix.tmean.nii.gz ] && 3dTstat -mean -prefix $pdir/tsnr/$prefix.tmean.nii.gz $pdir/$prefix.nii.gz
	   	 [ ! -r $pdir/tsnr/$prefix.det.nii.gz ] && 3dDetrend -prefix $pdir/tsnr/$prefix.det.nii.gz -polort 4 $pdir/$prefix.nii.gz
	   	 [ ! -r $pdir/tsnr/$prefix.det.stdev.nii.gz ] && 3dTstat -stdev -prefix $pdir/tsnr/$prefix.det.stdev.nii.gz $pdir/tsnr/$prefix.det.nii.gz
	   	 [ ! -r $pdir/tsnr/$outname ] && 3dcalc -a $pdir/tsnr/$prefix.tmean.nii.gz -b $pdir/tsnr/$prefix.det.stdev.nii.gz -expr 'a / b' -float -prefix $pdir/tsnr/$outname
	   fi

        fi
	#3dcopy -overwrite $pdir/tsnr/${prefix}_tsnr.nii.gz $pdir/tsnr/${prefix}_tsnr.nii.gz
        outfile=$pdir/tsnr/${outname}.txt
        if [ ! -s $outfile ]; then
          echo "createing $outfile"
	  3dmaskave -quiet -mask $gm_mask $pdir/tsnr/${outname} > $outfile
        fi
        [ ! -s $outfile ] && echo "FAILED! 3dmaskave -quiet -mask $gm_mask $pdir/tsnr/${outname} has no output?" >&2 
        echo $outfile
done
}


set -e # uncomment for troubleshooting

[ -z "$1" ] && usage ""
TSNR_onerun $1 
# file=${MHproc_dir}/${Subject}/${Session}/rsfMRI_${run}/
# waitForJobs $CFGFILE

